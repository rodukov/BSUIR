%% Лабораторная работа №2
% Работа с матрицами в MATLAB

clc; clear; close all;

% === Исходные матрицы ===
a = [4, 2, 8, 1;
     3, 7, 5, 2];

b = [7, 5;
     1, 8;
     9, 2;
     3, 6];

c = [3, 6, 7;
     8, 9, 1;
     4, 5, 2];

d = [5, 7, 2;
     5, 9, 1;
     8, 1, 8;
     9, 6, 5];

e = [5, 2;
     4, 6;
     1, 7];

disp('=== 1. Просмотр одной строки и одного столбца ===');
row2_a = a(2, :)        % вторая строка
col3_a = a(:, 3)        % третий столбец

disp('=== 2. Новая матрица из нескольких строк и столбцов ===');
sub_d = d(2:3, 1:2)

disp('=== 3. Добавить матрицу как дополнительные столбцы ===');
% a (2x4) и b(4x2) нельзя напрямую объединить, но b и d (4x2 и 4x3) можно
newCols = [b, d(:, 1:2)]

disp('=== 4. Добавить матрицу как дополнительные строки ===');
newRows = [b; e(1:3, :)]

disp('=== 5. Сложить две матрицы поэлементно ===');
sumMatrix = a + a

disp('=== 6. Перемножить две матрицы поэлементно ===');
elemMult = a .* a

disp('=== 7. Корень четвертой степени элементов ===');
fourthRoot = a .^ (1/4)

disp('=== 8. Перемножить по правилам матричной алгебры ===');
% a (2x4) * b (4x2)
matrixMult = a * b

disp('=== 9. Умножить саму на себя поэлементно ===');
selfElemMult = c .* c

disp('=== 10. Умножить саму на себя по правилам матричной алгебры ===');
selfMatrixMult = c * c

disp('=== 11. Транспонировать матрицу ===');
transposeC = c'

disp('=== 12. Определитель матрицы ===');
detC = det(c)

disp('=== 13. Обратная матрица и проверка ===');
invC = inv(c)
checkIdentity = c * invC    % должна быть близка к единичной матрице
